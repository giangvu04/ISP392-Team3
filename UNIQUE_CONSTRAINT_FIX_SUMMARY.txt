TÓM TẮT SỬA LỖI UNIQUE CONSTRAINT
==================================

Vấn đề: Violation of UNIQUE KEY constraint 'UQ__users__F6CBBCF01A433CC9'. Cannot insert duplicate key in object 'dbo.users'. The duplicate key value is ().

NGUYÊN NHÂN:
1. Có ràng buộc UNIQUE trên một cột nào đó trong bảng users
2. Cột này đang nhận giá trị null hoặc trống từ form
3. Database không cho phép nhiều giá trị null/trống trong cột có ràng buộc UNIQUE
4. Có thể là cột citizen_id hoặc address có ràng buộc UNIQUE

CÁC THAY ĐỔI ĐÃ THỰC HIỆN:

1. SỬA DAOUSER (src/java/dal/DAOUser.java):
   - Cập nhật method createUser() để xử lý null values đúng cách
   - Sử dụng ps.setNull() thay vì ps.setString() cho các giá trị null
   - Trim các giá trị string trước khi lưu
   - Xử lý citizen_id và address với null check

2. SỬA ADMINUSERMANAGEMENTSERVLET (src/java/Controller/userservlet/AdminUserManagementServlet.java):
   - Cập nhật method createUser() để xử lý null values trước khi gửi đến DAO
   - Trim tất cả các giá trị string
   - Set null cho các trường optional nếu trống
   - Cải thiện validation

3. CẬP NHẬT TESTCREATEUSERSERVLET (src/java/Controller/TestCreateUserServlet.java):
   - Thêm test với giá trị null
   - Hiển thị thông tin chi tiết hơn về user được tạo
   - Test với dữ liệu unique (timestamp)
   - Hiển thị bảng thông tin user đầy đủ

4. TẠO TESTDATABASESCHEMASERVLET (src/java/Controller/TestDatabaseSchemaServlet.java):
   - Servlet để kiểm tra cấu trúc database
   - Hiển thị tất cả UNIQUE constraints
   - Hiển thị PRIMARY KEY và FOREIGN KEY
   - Hiển thị cấu trúc bảng users chi tiết

5. CẬP NHẬT WEB.XML (web/WEB-INF/web.xml):
   - Thêm mapping cho TestDatabaseSchemaServlet

CÁC TÍNH NĂNG MỚI:
- Xử lý null values đúng cách
- Debug tools để kiểm tra database schema
- Test tools với dữ liệu unique
- Hiển thị thông tin chi tiết về lỗi

HƯỚNG DẪN DEBUG:
1. Chạy /testdatabaseschema để xem cấu trúc database
2. Kiểm tra UNIQUE constraints trong bảng users
3. Chạy /testcreateuser để test tạo user
4. Kiểm tra log console để xem thông báo lỗi
5. Test tạo user với dữ liệu đầy đủ

LƯU Ý:
- Đảm bảo các trường optional (citizen_id, address) có thể null
- Kiểm tra ràng buộc UNIQUE trên các cột
- Test với dữ liệu unique (email, phone)
- Kiểm tra database schema có đúng không

CÁC FILE ĐÃ THAY ĐỔI:
- src/java/dal/DAOUser.java
- src/java/Controller/userservlet/AdminUserManagementServlet.java
- src/java/Controller/TestCreateUserServlet.java
- src/java/Controller/TestDatabaseSchemaServlet.java (mới)
- web/WEB-INF/web.xml

CÁC BƯỚC TIẾP THEO:
1. Chạy /testdatabaseschema để xem UNIQUE constraints
2. Xác định cột nào có ràng buộc UNIQUE gây vấn đề
3. Sửa database schema nếu cần
4. Test tạo user với dữ liệu hợp lệ
5. Kiểm tra hiển thị trong danh sách user

NẾU VẪN CÓ LỖI:
1. Kiểm tra database schema với /testdatabaseschema
2. Xem UNIQUE constraints nào đang gây vấn đề
3. Sửa database schema để cho phép null trong cột có UNIQUE
4. Hoặc xóa UNIQUE constraint không cần thiết
5. Test lại với /testcreateuser

SQL ĐỂ SỬA DATABASE (nếu cần):
```sql
-- Xem UNIQUE constraints
SELECT 
    i.name AS constraint_name,
    c.name AS column_name
FROM sys.indexes i
INNER JOIN sys.index_columns ic ON i.object_id = ic.object_id AND i.index_id = ic.index_id
INNER JOIN sys.columns c ON ic.object_id = c.object_id AND ic.column_id = c.column_id
WHERE i.object_id = OBJECT_ID('users') AND i.is_unique = 1;

-- Xóa UNIQUE constraint nếu cần
ALTER TABLE users DROP CONSTRAINT UQ__users__F6CBBCF01A433CC9;

-- Hoặc cho phép null trong cột có UNIQUE
ALTER TABLE users ALTER COLUMN citizen_id VARCHAR(50) NULL;
``` 